class EvaluateExpression:
  valid_char = '0123456789+-*/() '
  valid_opr = '+-*/()'
  
  def __init__(self, string=""):
    self._expression = ''
    for i in string:
      if i in self.valid_char:
        self._expression = string
      else:
        self._expression = ''
        break

  @property
  def expression(self):
    return self._expression

  @expression.setter
  def expression(self, new_expr):
    self.__init__(new_expr)

  def insert_space(self):
    str_expression = self.expression
    opr_ls = []
    # If element in the expression is an operator '+-*/()', put it into list
    # If element appears more than one, not put into list
    for i in str_expression:
      if (i in self.valid_opr) and (i not in opr_ls):
        opr_ls += [i]
      else:
        pass
    # Iterate over all elements in operator list
    for j in opr_ls:
      old_value = j
      new_value = " " + j + " "
      # Because the method used is replace, similar operator is not needed to be put in list
      str_expression = str_expression.replace(old_value, new_value)
    return str_expression
